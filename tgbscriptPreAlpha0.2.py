#!/bin/python3
import telebot
import requests
import json
import os

global nInfo1
global nInfo2
nInfo1 = "absInfoFirstSheet.txt"
nInfo2 = "absInfoSecondSheet.txt"
dUpdate_text = "–û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã - —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞ –∏—Ö –∑–∞–º–µ–Ω—É –Ω–æ–≤—ã—Ö —Å –Ω–æ–≤—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º" \
               "–∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–æ —Å —Ç–∞–±–ª–∏—Ü—ã\n\n"
dOpen_text = "–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª—ã - –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ\n\n"
dCancel_text = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é - –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
rGroup_text = "–ì—Ä—É–ø–ø—ã - —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø, —É—á–∞—â–∏—Ö—Å—è —É —Ç–µ–±—è\n\n"
rSubject_text = "–î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã - —Å–ø–∏—Å–æ–∫ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω, —á—Ç–æ —Ç—ã –≤–µ–¥—ë—à—å\n\n"
rLink_text = "–°—Å—ã–ª–∫–∏ - —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –¥–æ–∫–∏ —Å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø–µ\n\n"
rCancel_text = "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é - –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
unresolved_message = "–ù–∞ –≤—Å—è–∫—É—é —Ö—Ä–µ–Ω—å –Ω–µ –æ—Ç–≤–µ—á–∞—é, —è–∫–æ–±—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —á—É–≤—Å—Ç–≤ –ø—Ä–æ—è–≤–ª—è—é, –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –Ω–µ —Å—Ç–æ–∏—Çüóøüóøüóø"

class isheet:
    """
    rc_mark: a marks that we will sent
    tid: sheets'es id
    sid: sheet's name
    surl: sheet's api url
    google_token: a token that can used in refresh token
    tgbot_token: a bot's token, nothing interesting
    """
    rc_mark = {'–ü', '–ù', '–ë', '–û'}
    tid = ''
    sid1 = '1—Å–µ–º-–û—Å–µ–Ω—å'
    sid2 = '2—Å–µ–º-–í–µ—Å–Ω–∞'
    google_token = '1//0ckdqe3fJ4-LRCgYIARAAGAwSNwF-L9IrmPKSdeA2eL0DzmYocxM9J5oENiVZZzcfSix2f9DtcdmC89OJbimZdoWiSuCfu5ikeVc'
    tgbot_token = "1277500164:AAEkU8DbjZX0E6wRa3JDKUKumIjlOuSLsRM"
    url_token = "https://oauth2.googleapis.com/token"
    gclient_id = "173493138930-85ifhekbvi7iak312hvbcok3f8466hn6.apps.googleusercontent.com"
    gclient_secret = "wVPZmRRZquXcrcZ53Ygryj7C"

    def __init__(self, access_token):
        self.acc_token = access_token


class get_new_token:
    payload = f"client_id={isheet.gclient_id}&client_secret={isheet.gclient_secret}&grant_type=refresh_token&refresh_token={isheet.google_token}"
    headers = {
        'charset': 'UTF-8',
        'Content-Type': 'application/x-www-form-urlencoded'
    }


tg = telebot.TeleBot(isheet.tgbot_token)
keyboard_main_menu = telebot.types.ReplyKeyboardMarkup()
keyboard_main_remove = telebot.types.ReplyKeyboardRemove()
keyboard_main_menu.row('–í—ã–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É')
keyboard_main_menu.add('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π–ª–æ–≤', '–ó–∞–∫—Ä—ã—Ç—å')
keyboard_update_menu = telebot.types.ReplyKeyboardMarkup()
keyboard_update_remove = telebot.types.ReplyKeyboardRemove()
keyboard_update_menu.row("–û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã", "–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª—ã")
keyboard_update_menu.add("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "")
keyboard_read_menu = telebot.types.ReplyKeyboardMarkup()
keyboard_read_remove = telebot.types.ReplyKeyboardRemove()
keyboard_read_menu.row("–ì—Ä—É–ø–ø—ã", "–î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã")
keyboard_read_menu.add("–°—Å—ã–ª–∫–∏", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")


def addFile(allInfoCols1, allInfoRows1, urls1, allInforCols2, allInfoRows2, urls2, bollForChoice, mid):
    print('–∞ —ç—Ç–æ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏...')
    _allInfoCols1 = json.loads(allInfoCols1.text)
    _allInfoRows1 = json.loads(allInfoRows1.text)
    _urls1 = json.loads(urls1.text)
    _allInforCols2 = json.loads(allInforCols2.text)
    _allInfoRows2 = json.loads(allInfoRows2.text)
    _urls2 = json.loads(urls2.text)
    # with open(nInfo1, "w+") as file:
    #     for i in _allInfoCols1:
    #         tg.send_message(mid, _allInfoCols1[2][0][i])
    ff = _allInfoRows1['values']
    print(ff)
    with open(f"iFiles/{nInfo1}", "w+") as file:
        for line in ff:
            f = " ".join(line[1:])
            file.write(f + '\n')


@tg.message_handler(commands=['get_token'])
def gtoken(message):
    rtest = requests.request("POST", isheet.url_token, headers=get_new_token.headers, data=get_new_token.payload)
    prtest = json.loads(rtest.text)
    access_token = prtest['access_token']
    print(access_token)
    return access_token


@tg.message_handler(commands=['start'])
def sendFirstMessage(message):
    global access_token
    fStartText = "–ü—Ä–∏–≤–µ—Ç, –¥–∞–≤–∞–π –Ω–∞—á–Ω—ë–º —Ä–∞–±–æ—Ç—É\n"
    mid = message.chat.id
    dirList = list(os.listdir("iFiles"))
    if nInfo1 in dirList:
        gmsg = tg.send_message(mid, f"{fStartText}\n–§–∞–π–ª—ã –≤ –ø–æ—Ä—è–¥–∫–µ, –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å", reply_markup=keyboard_main_menu)
        tg.register_next_step_handler(gmsg, main_choice_menu)
    else:
        bmsg = tg.send_message(mid, f"{fStartText}\n–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ"
                                    f"—Å—Å—ã–ª–∫—É –Ω–∞ –¢–∞–±–ª–∏—Ü—É, –≤–≤–µ–¥—è —Å—Å—ã–ª–∫—É –≤"
                                    f"–ø–æ–ª–µ –≤–≤–æ–¥–∞, –æ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∏–∂–µ, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è"
                                    f"–ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –¥–æ—Å—Ç—É–ø –∫ –¢–∞–±–ª–∏—Ü–µ —É "
                                    f"–±–æ—Ç–∞ –∏–º–µ–µ—Ç—Å—è, —Å—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ –∏ –∏–º–µ–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π "
                                    f"–∞–π–¥–∏ –¢–∞–±–ª–∏—Ü—ã", reply_markup=keyboard_main_remove)
        access_token = gtoken(message)
        tg.register_next_step_handler(bmsg, getUrl)


def main_setting_menu(smessage):
    sid = smessage.chat.id
    if smessage.text == "–û–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã":
        checkpoint = False
        tg.register_next_step_handler(checkpoint, main_setting_menu)
    elif smessage.text == "–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª—ã":
        checkpoint = tg.send_message(sid, "–†–∞–±–æ—Ç–∞–µ—Ç –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª—ã")
        tg.register_next_step_handler(checkpoint, main_setting_menu)
    elif smessage.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        sendFirstMessage(smessage)

    else:
        checkpoint = tg.send_message(sid, unresolved_message)
        tg.register_next_step_handler(checkpoint, main_setting_menu)


def update_file(message):
    uid = message.chat.id


def main_choice_menu(call):
    cid = call.chat.id
    if call.text == "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π–ª–æ–≤":
        checkpoint = tg.send_message(cid, dUpdate_text + dOpen_text + dCancel_text, reply_markup=keyboard_update_menu)
        tg.register_next_step_handler(checkpoint, main_setting_menu)
    elif call.text == "–í—ã–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É":
        checkpoint = tg.send_message(cid, rGroup_text + rSubject_text + rLink_text + rCancel_text,
                                     reply_markup=keyboard_read_menu)
    elif call.text == "–ó–∞–∫—Ä—ã—Ç—å":
        tg.send_message(cid, "–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É, –ø—Ä–æ–ø–∏—à–∏ –∏–ª–∏ –Ω–∞–∂–º–∏ –Ω–∞ /start",
                        reply_markup=keyboard_main_remove)
    else:
        checkpoint = tg.send_message(cid, unresolved_message)
        tg.register_next_step_handler(checkpoint, main_choice_menu)


def getUrl(gmessage):
    global irul
    mid = gmessage.chat.id
    tid = '/'.join(gmessage.text.split('/')[5:][:-1])
    print(tid)
    surl1 = f"https://sheets.googleapis.com/v4/spreadsheets/{tid}/values/{isheet.sid1}"
    surl2 = f"https://sheets.googleapis.com/v4/spreadsheets/{tid}/values/{isheet.sid2}"
    try:
        tg.send_message(mid, "–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏...")
        gtest_col1 = requests.get(f"{surl1}!A:O?access_token={access_token}&majorDimension=COLUMNS")
        print(gtest_col1)
        if gtest_col1.status_code != 200:
            tg.send_message(mid, f"{isheet.sid1} –≤ –≤–∏–¥–µ —Å—Ç–æ–ª–±—Ü–æ–≤ - ‚ùå")
        else:
            tg.send_message(mid, f"{isheet.sid1} –≤ –≤–∏–¥–µ —Å—Ç–æ–ª–±—Ü–æ–≤ - ‚úîÔ∏è")
        gtest_rows1 = requests.get(f"{surl1}!A:O?access_token={access_token}&majorDimension=ROWS")
        tg.send_message(mid, "33%")
        if gtest_rows1.status_code != 200:
            tg.send_message(mid, f"{isheet.sid1} –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫ - ‚ùå")
        else:
            tg.send_message(mid, f"{isheet.sid1} –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫ - ‚úîÔ∏è")
        gtest_urls1 = requests.get(f"{surl1}!C:C?access_token={access_token}&majorDimension=COLUMNS")
        tg.send_message(mid, "40%")
        if gtest_urls1.status_code != 200:
            tg.send_message(mid, f"{isheet.sid1} —Å—Å—ã–ª–∫–∏ - ‚ùå")
        else:
            tg.send_message(mid, f"{isheet.sid1} —Å—Å—ã–ª–∫–∏ - ‚úîÔ∏è")
        gtest_col2 = requests.get(f"{surl1}!A:O?access_token={access_token}&majorDimension=COLUMNS")
        tg.send_message(mid, "56%")
        if gtest_col2.status_code != 200:
            tg.send_message(mid, f"{isheet.sid2} –≤ –≤–∏–¥–µ —Å—Ç–æ–ª–±—Ü–æ–≤ - ‚ùå")
        else:
            tg.send_message(mid, f"{isheet.sid2} –≤ –≤–∏–¥–µ —Å—Ç–æ–ª–±—Ü–æ–≤ - ‚úîÔ∏è")
        gtest_rows2 = requests.get(f"{surl2}!A:O?access_token={access_token}&majorDimension=ROWS")
        tg.send_message(mid, "82%")
        if gtest_rows2.status_code != 200:
            tg.send_message(mid, f"{isheet.sid2} –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫ - ‚ùå")
        else:
            tg.send_message(mid, f"{isheet.sid2} –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫ - ‚úîÔ∏è")
        gtest_urls2 = requests.get(f"{surl2}!C:C?access_token={access_token}&majorDimension=COLUMNS")
        if gtest_urls2.status_code != 200:
            tg.send_message(mid, f"{isheet.sid2} —Å—Å—ã–ª–∫–∏ - ‚ùå")
        else:
            tg.send_message(mid, f"{isheet.sid2} —Å—Å—ã–ª–∫–∏ - ‚úîÔ∏è")
        tg.send_message(mid, "100%")
        if gtest_col1.status_code == 200:
            tg.send_message(mid, "–ó–∞–≥—Ä—É–∑–∏–ª:)")
            '''–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ–∞–π–ª –∏ –≤ –Ω–µ–≥–æ –≤—Å–µ –≤—Å–µ –≤—Å–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å'''
            print('–Ω—É —Ç–∏–ø —Ç—É—Ç —Ñ—É–Ω–∫—Ü–∏—è –≤—Ä–æ–¥–µ –±—ã...')
            addFile(gtest_col1, gtest_rows1, gtest_urls1, gtest_col2, gtest_rows2, gtest_urls2, True, mid)
            return sendFirstMessage(gmessage)
        else:
            tg.send_message((mid, f"–û—à–∏–±–∫–∞ {gtest_col1.status_code}"))
    except:
        if gtest_col1.status_code == 403:
            tg.send_message(mid, f"–û—à–∏–±–∫–∞ {gtest_col1.status_code}, –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –≤–µ—Ä–Ω—ã, "
                                 f"–ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑")
        if gtest_col1.status_code == 404:
            tg.send_message(mid, f"–¢–∞–∫–æ–π –¢–∞–±–ª–∏—Ü—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ({gtest_col1.status_code})")
        if gtest_col1.status_code == 400:
            tg.send_message(mid,
                            f"–Ø –Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª, —É –º–µ–Ω—è {gtest_col1.status_code}, –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∏ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ"
                            f"–¥–∞–Ω–Ω—ã–µ!")


tg.polling()
